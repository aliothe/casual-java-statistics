/*
 * Copyright (c) 2024, The casual project. All rights reserved.
 *
 * This software is licensed under the MIT license, https://opensource.org/licenses/MIT
 */
//-*- coding: utf-8 -*-
plugins {
    id 'java'
    id 'io.quarkus'
    id 'groovy'
    id 'jacoco'
    id("org.sonarqube") version "4.4.1.3373"
}

repositories {
    mavenCentral()
    mavenLocal()
}

sonar {
    properties {
        properties["sonar.host.url"] = 'http://localhost:9000'
        properties["sonar.verbose"] = "true"
        properties['sonar.java.source'] = 17
    }
}

test {
    finalizedBy jacocoTestReport
    jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED', '--add-opens=java.base/java.util=ALL-UNNAMED'
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}

// always run tests when running sonar
rootProject.tasks['sonar'].dependsOn.add(subprojects.tasks['test'])

dependencies {
    implementation 'io.quarkus:quarkus-netty'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-arc'
    implementation "se.laz.casual:casual-event-client:${casualVersion}"
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'com.google.code.gson:gson:2.10.1'
    // spock
    testImplementation platform('org.apache.groovy:groovy-bom:4.0.5')
    testImplementation 'org.apache.groovy:groovy'
    testImplementation platform('org.spockframework:spock-bom:2.3-groovy-4.0')
    testImplementation 'org.spockframework:spock-core'
    testImplementation 'net.bytebuddy:byte-buddy:1.14.8'
    testImplementation 'org.spockframework:spock-junit4'
}

group 'se.laz.casual'
version '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters' << "-Werror"
}

compileTestJava {
    options.encoding = 'UTF-8'
}
